---
layout: post
title: Figuring out Linear Mixed Models using Stress-Hardening Data (and then figuring out why import_IPAM code doesn't work anymore)
date: '2023-01-10'
categories: Coding
tags: [Coding]
---

I am revisiting the 2022 stress-hardneing experiment to finally tackle the unknown, which is how to incorporate so many different variables into one statistical test (tank replicates, biological replicates, species, genotypes, treatments, time points).

Dr. Kevin Wong generously sent me a PPT he made to go over these concepts.

First, the rules of linear models. 
Assumptions that must be met:
1. Linearity of relationship between predictors and responses.
2. Normality of residuals.
3. Homogeneity of variance.
4. Independence of residual errors.

Mixed effect models: general or generalized linear models that allow for both fixed and random effects. 
GLMMs are useful for:
1. data with sources of random variability (i.e. tank, genotype)
2. Data with non-independence (tank effects, repeated measures, multilevel or hierarchical designs)
3. Data with non-normal distributions

A fixed effect is a parameter that does NOT vary across observations (i.e. experimental treatment). Time is a fixed effect in a time-series analysis. 

A random effect is a source of variability unexplained by a fixed effect, or data collected across incomplete levels of effect. This would include things like repeated measures (individual sampled multiple times, tank effect), or site, depth, or genotype.

The random intercept is an important part of the linear model, because it allows the model to estimate a diference response for each level of random intercept. (example: growth may be higher in some tanks due to light and flow, so add (1|tank) to your GLMM formula)

Nested random intercepts are important when a lower level factor appears only within a particular level of upper level factor. Example: a coral stays in the same tank for the whole experiment, and is sampled multiple times = (1|tank/sample)

A crossed random intercept is when a lower level factor appears within a multiple level of upper level factor. Example: a coral genotype that is sampled multiple times is distributed across all tanks (1|tank/sample) + (1|genotype).

Random slope allows the model to estimate different effect of fixed effects for each level of random slope. For example, the growth of the coral of small versus large corals is differentially dependent on feeding treatment = (1+size)

When running a model, we need to pick the right distribution. Otherwise, our conclusions will be flawed if the data does not meet the assumptions of the model.

Types of data for use in GLMMs:
1. Measurement (continuous data) --> normal/Gaussian distribution (example given is coral tissue properties between treatments)
2. Binomial/Logistic (0,1; success or failure) --> binomial distribution (example given is survival based on a treatment over time)
3. Count (whole integers, non-continuous) --> Poisson distribution (example given is number of polyps that expand per treatment)
4. Percentage/Proportion --> beta or binomial distribution; the family="beta", link="logit" function in code. (example given is probability density of survival in different treatments)
5. Time to failure --> Kaplan-Meier, Cox Proportional Hazards (example is probability of survivorshop over time in different treatments)

What I would like to do next is try to make a linear mixed effects model for the Fv/Fm data from the experiment. However, I'm over at AOML right now and the wifi is being so slow. So I'm not sure how far I'll get.

Ok, after working on this for an hour, I realized that there were some issues with the RStudio on my AOML desktop versus my laptop. First, I had updated the RStudio on my computer, so it messed up one of the packages that was needed for Ross Cunning's IPAMtoR custom program. I tried to install devtools to install this package (called "joeyr") but AOML wasn't letting me do that for some reason, or something else needed to be updated or something. I got it to work on my laptop though. Then, once I actually got it to work, I have been having issues importing the csv files that were downloaded from the IPAM software. 

The error I keep getting (just for two of the files which is weird) is "Error in if (is.na(dplyr::last(df))) df <- df[, -(ncol(df))] : 
  the condition has length > 1"
  
I thought maybe there was a download issue from OneDrive, because everything is stored on OneDrive. But even after downloading everything, still it is not working. So maybe it is something wrong with the import_ipam function. I am going to try to comment out the line "if (is.na(dplyr::last(df))) df <- df[,-(ncol(df))]", which is meant to get rid of trailing NAs, and see if that will let me import them.

Now the error I get is "Error in dim(ordered) <- ns : 
  dims [product 1] do not match the length of object [0]"

I can't figure out why this isn't working. Maybe I need to save the files as .csv files again?

<u> Jan 21st 2023 update </u>  

I installed an older version of RStudio (desktop from 7.1.2022) and tried to load the ipam files again, and march 16 and april 20 still didn't work (i get the same error from before). So I am going to download the files from google drive again and see if that helps in any way. maybe the files got reformatted somehow.

I did this for march 16 and it still didnt work...

I also tried to isolate the files that the error code was popping up for (it seemed like sequentially some of the files worked, but then there would be one that the code would get hung up on). But when testing csv files individually, they all worked and there were no issues.

Maybe I need to ask Ross, Carly, Rich, or Alex if they have ever come across this error.

OK WAIT I GOT IT TO WORK!!!!

something about the if-then statement, R was getting tripped up on. So i replaced the lines:
# Get rid of trailing NA
    if (is.na(dplyr::last(df))) df <- df[,-(ncol(df))]
    
with:
# Get rid of trailing NA
    df <- df %>% select_if(~ !any(is.na(.)))
    
And I can now import march 16 and april 20!!!!! WOOOO!

